import Head from 'next/head';
import { useContext, useEffect, useState } from 'react';
import SiteContext from '../components/SiteContext';
import Navbar from '../components/Navbar';

export default function Register() {

  const { setcurrent, setSwipe, position } = useContext(SiteContext);

  useEffect(() => {
    setcurrent(5)
    setSwipe(false)
  }, [])

  // States for registration
  const [firstname, setFirstName] = useState('');
  const [lastname, setLastName] = useState('');
  const [mobileNo, setMobileNo] = useState('');
  const [deg, setDegree] = useState('');
  const [branch, setBranch] = useState('');
  const [sem, setSem] = useState('');
  const [nameOnCertificate, setNameOnCertificate] = useState('');
  const [clgname, setClgName] = useState('');
  const [clgstate, setClgState] = useState('');
  const [linkedin, setLinkedin] = useState('');
  const [github, setGithub] = useState('');
  const [discord, setDiscord] = useState('');
  const [email, setEmail] = useState('');
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');
  const [confirmpassword, setConfirmPassword] = useState('');

 
  // States for checking the errors
  const [submitted, setSubmitted] = useState(false);
  const [error, setError] = useState(false);
 
  // Handling the state change
  const handleFirstName = (e) => {
    setFirstName(e.target.value);
    setSubmitted(false);
  };

  const handleLastName = (e) => {
    setLastName(e.target.value);
    setSubmitted(false);
  };

  const handleMobileNo = (e) => {
    setMobileNo(e.target.value);
    setSubmitted(false);
  };

  const handleDegree = (e) => {
    setDegree(e.target.value);
    setSubmitted(false);
  };

  const handleBranch= (e) => {
    setBranch(e.target.value);
    setSubmitted(false);
  };

  const handleSem= (e) => {
    setSem(e.target.value);
    setSubmitted(false);
  };

  const handleNameOnCertificat= (e) => {
    setNameOnCertificate(e.target.value);
    setSubmitted(false);
  };

  const handleClgName= (e) => {
    setClgName(e.target.value);
    setSubmitted(false);
  };

  const handleClgState= (e) => {
    setClgState(e.target.value);
    setSubmitted(false);
  };

  const handleLinkedin= (e) => {
    setLinkedin(e.target.value);
    setSubmitted(false);
  };

  const handleGithub= (e) => {
    setGithub(e.target.value);
    setSubmitted(false);
  };

  const handleDiscord= (e) => {
    setDiscord(e.target.value);
    setSubmitted(false);
  };
  
  const handleEmail = (e) => {
    setEmail(e.target.value);
    setSubmitted(false);
  };

  const handleUsername = (e) => {
    setUsername(e.target.value);
    setSubmitted(false);
  };

  const handlePassword = (e) => {
    setPassword(e.target.value);
    setSubmitted(false);
  };
 
  const handleConfirmPassword = (e) => {
    setConfirmPassword(e.target.value);
    setSubmitted(false);
  };

  // Handling the form submission
  const handleSubmit = (e) => {
    e.preventDefault();
    if (firstname === '' || lastname === '' || mobileNo === '' || deg === '' || branch === '' || sem === '' || nameOnCertificate === '' || clgname === '' || clgstate === '' || linkedin === '' || github === '' || discord === '' || email === '' || username === '' || password === '' || confirmpassword === '') {
      setError(true);
    } else {
      setSubmitted(true);
      setError(false);
    }
  };
 
  // Showing success message
  const successMessage = () => {
    return (
      <div
        className="success"
        style={{
          display: submitted ? '' : 'none',
        }}>
        <h1> {username} successfully registered!!</h1>
      </div>
    );
  };
 
  // Showing error message if error is true
  const errorMessage = () => {
    return (
      <div
        className="error"
        style={{
          display: error ? '' : 'none',
        }}>
        <h1>Please enter all the fields</h1>
      </div>
    );
  };

  return (
    <div>
      <Head>
        <title>MINeD | Register</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {/* Navigation Bar */}
      <Navbar />

      <main id="home">

        {/* Main Content here */}
        <div id="content" >
          <section style={{
            transform: `translateY(-${position*80}vh)`
          }}>
            <h1>User Registration</h1>  <br/>
        
            <form className='form'>
                {/* Labels and inputs for form data */}
                <label className="label">FirstName</label>
                <input onChange={handleFirstName} className="input"
                value={firstname} type="text" /> <br/>

                <label className="label">LastName</label>
                <input onChange={handleLastName} className="input"
                value={lastname} type="text" /> <br/> 

                <label className="label">Mobile No</label>
                <input onChange={handleMobileNo} className="input"
                value={mobileNo} type="text" /> <br/>  

                <label className="label">Degree</label>
                <input onChange={handleDegree} className="input"
                value={deg} type="text" /> <br/> 

                <label className="label">Branch</label>
                <input onChange={handleBranch} className="input"
                value={branch} type="text" /> <br/> 

                <label className="label">Semister</label>
                <input onChange={handleSem} className="input"
                value={sem} type="text" /> <br/> 

                <label className="label">Name On Certificate</label>
                <input onChange={handleNameOnCertificat} className="input"
                value={nameOnCertificate} type="text" /> <br/>

                <label className="label">College Name</label>
                <input onChange={handleClgName} className="input"
                value={clgname} type="text" /> <br/> 

                <label className="label">College State</label>
                <input onChange={handleClgState} className="input"
                value={clgstate} type="text" /> <br/>

                <label className="label">Linkedin Profile</label>
                <input onChange={handleLinkedin} className="input"
                value={linkedin} type="text" /> <br/>

                <label className="label">Github Profile</label>
                <input onChange={handleGithub} className="input"
                value={github} type="text" /> <br/> 

                <label className="label">Discord UserId</label>
                <input onChange={handleDiscord} className="input"
                value={discord} type="text" /> <br/>  

                <label className="label">Email</label>
                <input onChange={handleEmail} className="input"
                value={email} type="email" />  <br/>

                <label className="label">Username</label>
                <input onChange={handleUsername} className="input"
                value={username} type="text" /> <br/>
        
                <label className="label">Password</label>
                <input onChange={handlePassword} className="input"
                value={password} type="password" /> <br/>

                <label className="label">Confirm Password</label>
                <input onChange={handleConfirmPassword} className="input"
                value={confirmpassword} type="text" /> <br/>
        
                <button onClick={handleSubmit} className="btn" type="submit">
                Submit
                </button>
            </form>

            {/* Calling to the methods */}
            <div className="messages">
                {errorMessage()}
                {successMessage()}
            </div>  <br/>

          </section>
        </div>

      </main>
    </div>
  )
}
